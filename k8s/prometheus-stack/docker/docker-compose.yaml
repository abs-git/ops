version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/yaml/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/yaml/web.yml:/etc/prometheus/web.yml
      - ./prometheus/yaml/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - ./local_home/prometheus_data:/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.config.file=/etc/prometheus/web.yml'
    user: '1000'
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    restart: unless-stopped
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  # https://github.com/Einsteinish/Docker-Compose-Prometheus-and-Grafana
  grafana:
    image: grafana/grafana:0.0.4
    build:
      context: ./grafana
    container_name: grafana
    volumes:
      - ./local_home/grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
    user: '1000'
    depends_on:
      - prometheus

  # https://github.com/aussiearef/ShoeHubV2
  shoehub-exporter:
    image: aussiearef/shoehub
    container_name: test-server
    ports:
      - 8000:8080

  # 로그 DATA 저장소
  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  # 로그 DATA 수집기
  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - ./promtail/yaml/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - ./local_home/flog_data:/logs
    command: -config.file=/etc/promtail/config.yml

  # dummy 로그 출력용
  flog:
    image: mingrammer/flog
    container_name: flog
    command: -f json -o '/var/log/dump.log' -d 5s -l -t log -w
    volumes:
      - ./local_home/flog_data:/var/log
